{"version":3,"file":"index.cjs.js","sources":["../src/consts.js","../src/utils/getCropperQueryString.js","../src/components/Icon/index.js","../src/icons/ArrowIcon.js","../src/utils/openLinkInNewTab.js","../src/modules/NavBar/Page.js","../src/hooks/useOutsideClick.js","../src/modules/NavBar/Button.js","../src/components/CropImage/index.js","../src/modules/NavBar/index.js","../src/icons/BurgerIcon.js","../src/modules/NavBarMobile/index.js"],"sourcesContent":["export const logoImageWidth = 100;\r\nexport const logoImageHeight = 50;\r\n","const roundedNumber = (value) => Math.floor(value);\n\nexport const getCropperQueryString = (crop) => {\n  if (!crop || Object.keys(crop).length === 0) {\n    return '';\n  }\n  const { imageBox, rotate } = crop;\n  const { x, y, height, width } = imageBox;\n  return `?x=${roundedNumber(x)}&y=${roundedNumber(y)}&w=${roundedNumber(width)}&h=${roundedNumber(\n    height\n  )}&rotate=${rotate}`;\n};\n","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst Icon = ({\r\n  icon,\r\n  opacity = 1,\r\n  hoverOpacity = 1,\r\n  color = '#000',\r\n  hoverColor = color,\r\n  size = 20,\r\n  rotate,\r\n  noCursor,\r\n  padding = 0,\r\n  width,\r\n  height,\r\n  tableIcon\r\n}) => (\r\n  <IconWrapper\r\n    color={color}\r\n    hoverColor={hoverColor}\r\n    size={size}\r\n    width={width}\r\n    height={height}\r\n    opacity={opacity}\r\n    hoverOpacity={hoverOpacity}\r\n    rotate={rotate}\r\n    noCursor={noCursor}\r\n    padding={padding}\r\n    tableIcon={tableIcon}\r\n  >\r\n    {_renderIcon(icon)}\r\n  </IconWrapper>\r\n);\r\n\r\nconst _renderIcon = (icon) => {\r\n  const Icon = icon;\r\n\r\n  if (typeof icon === 'function') {\r\n    return <Icon />;\r\n  } else if (typeof icon === 'string') {\r\n    return icon;\r\n  }\r\n\r\n  return null;\r\n};\r\n\r\nconst IconWrapper = styled.div`\r\n  cursor: ${({ noCursor }) => (noCursor ? 'initial' : 'pointer')};\r\n  display: ${({ tableIcon }) => (tableIcon ? 'table-cell' : 'flex')};\r\n  flex: 0 0 auto;\r\n  align-items: center;\r\n  font-size: ${({ tableIcon }) => !tableIcon && '0'};\r\n  width: ${({ size, width }) => (width ? width : size)}px;\r\n  height: ${({ size, height }) => (height ? height : size)}px;\r\n  transform: rotate(${({ rotate }) => rotate}deg);\r\n  transform-origin: 50% 50%;\r\n  padding: ${({ padding }) => padding}px;\r\n\r\n  :hover {\r\n    svg {\r\n      fill: ${({ hoverColor }) => hoverColor};\r\n      opacity: ${({ hoverOpacity }) => hoverOpacity};\r\n    }\r\n  }\r\n\r\n  svg {\r\n    fill: ${({ color }) => color};\r\n    opacity: ${({ opacity }) => opacity};\r\n    width: 100%;\r\n    height: 100%;\r\n    transition: all ease-in-out 0.3s;\r\n    vertical-align: ${({ tableIcon }) => tableIcon && 'middle'};\r\n  }\r\n`;\r\n\r\nIcon.propTypes = {\r\n  color: PropTypes.string,\r\n  hoverColor: PropTypes.string,\r\n  icon: PropTypes.oneOfType([PropTypes.string, PropTypes.func]),\r\n  size: PropTypes.number,\r\n  padding: PropTypes.number,\r\n  opacity: PropTypes.number,\r\n  hoverOpacity: PropTypes.number,\r\n  rotate: PropTypes.number,\r\n  noCursor: PropTypes.bool,\r\n  width: PropTypes.number,\r\n  height: PropTypes.number,\r\n  tableIcon: PropTypes.bool\r\n};\r\n\r\nIcon.defaultProps = {\r\n  opacity: 1,\r\n  color: '#000',\r\n  size: 20,\r\n  padding: 0,\r\n  rotate: 0,\r\n  noCursor: false,\r\n  tableIcon: false\r\n};\r\n\r\nexport { Icon };\r\n","import React from 'react';\r\nconst ArrowIcon = () => (\r\n  <svg height=\"24\" viewBox=\"0 0 24 24\" width=\"24\">\r\n    <path d=\"M0 0h24v24H0V0z\" fill=\"none\" />\r\n    <path d=\"M15.41 16.59L10.83 12l4.58-4.59L14 6l-6 6 6 6 1.41-1.41z\" />\r\n  </svg>\r\n);\r\n\r\nexport default ArrowIcon;\r\n","export const openLinkInNewTab = (link) => window.open(link, '_blank', 'noreferrer noopener');\r\n","import React, { memo, useCallback, useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport styled from 'styled-components';\r\nimport { useOutsideClick } from '../../hooks/useOutsideClick.js';\r\nimport { Icon } from '../../components/Icon';\r\nimport ArrowIcon from '../../icons/ArrowIcon.js';\r\nimport { openLinkInNewTab } from '../../utils/openLinkInNewTab.js';\r\n\r\nconst NavBarPage = memo(\r\n  ({\r\n    disabledRedirect,\r\n    disabledListClick,\r\n    link,\r\n    title,\r\n    navBarTextHoverColor,\r\n    navBarTextClickedColor,\r\n    children,\r\n    dropdownSettingsInactiveFill,\r\n    dropdownSettingsInactiveBorder,\r\n    dropdownSettingsHoverClickedFill,\r\n    dropdownSettingsHoverClickedBorder,\r\n    dropdownSettingsTextColorRegular,\r\n    dropdownSettingsTextColorHover,\r\n    dropdownSettingsTextColorClicked,\r\n    dropdownSettingsTextFontFamily,\r\n    dropdownSettingsTextFontSize,\r\n    dropdownSettingsTextBold,\r\n    dropdownSettingsTextUnderline,\r\n    dropdownSettingsTextItalic,\r\n    dropdownSettingsHorizontalPadding,\r\n    dropdownSettingsVerticalPadding,\r\n    isStatic\r\n  }) => {\r\n    const [open, setOpen] = useState(isStatic);\r\n\r\n    const ref = useOutsideClick(() => {\r\n      setOpen(false);\r\n    });\r\n\r\n    const isDropdown = children.length > 0;\r\n\r\n    const onClick = useCallback(() => {\r\n      if (isDropdown && !disabledListClick) {\r\n        setOpen((state) => !state);\r\n      } else if (!isDropdown && !disabledRedirect && link) {\r\n        openLinkInNewTab(link);\r\n      }\r\n    }, [disabledListClick, disabledRedirect, isDropdown, link]);\r\n\r\n    return (\r\n      <Container ref={ref}>\r\n        <Wrapper\r\n          navBarTextHoverColor={navBarTextHoverColor}\r\n          navBarTextClickedColor={navBarTextClickedColor}\r\n          onClick={onClick}\r\n          data-link={!isDropdown ? link : undefined}\r\n          data-isdropdown={isDropdown}\r\n        >\r\n          {title}{' '}\r\n          {isDropdown && (\r\n            <IconWrapper>\r\n              {open ? (\r\n                <Icon icon={ArrowIcon} rotate={-90} color={'#ffffff'} />\r\n              ) : (\r\n                <Icon icon={ArrowIcon} rotate={180} color={'#ffffff'} />\r\n              )}\r\n            </IconWrapper>\r\n          )}\r\n        </Wrapper>\r\n        {open && isDropdown && (\r\n          <DropdownWrapper data-list={true} className={\"navbar-list\"}>\r\n            {children.map((el) => (\r\n              <DropdownElement\r\n                key={el.id}\r\n                dropdownSettingsInactiveFill={dropdownSettingsInactiveFill}\r\n                dropdownSettingsInactiveBorder={dropdownSettingsInactiveBorder}\r\n                dropdownSettingsHoverClickedFill={dropdownSettingsHoverClickedFill}\r\n                dropdownSettingsHoverClickedBorder={dropdownSettingsHoverClickedBorder}\r\n                dropdownSettingsTextColorRegular={dropdownSettingsTextColorRegular}\r\n                dropdownSettingsTextColorHover={dropdownSettingsTextColorHover}\r\n                dropdownSettingsTextColorClicked={dropdownSettingsTextColorClicked}\r\n                dropdownSettingsTextFontFamily={dropdownSettingsTextFontFamily}\r\n                dropdownSettingsTextFontSize={dropdownSettingsTextFontSize}\r\n                dropdownSettingsTextBold={dropdownSettingsTextBold}\r\n                dropdownSettingsTextUnderline={dropdownSettingsTextUnderline}\r\n                dropdownSettingsTextItalic={dropdownSettingsTextItalic}\r\n                dropdownSettingsHorizontalPadding={dropdownSettingsHorizontalPadding}\r\n                dropdownSettingsVerticalPadding={dropdownSettingsVerticalPadding}\r\n                onClick={() => {\r\n                  if (el.link && !disabledRedirect) {\r\n                    openLinkInNewTab(el.link);\r\n                    setOpen(false);\r\n                  } else {\r\n                    setOpen(false);\r\n                  }\r\n                }}\r\n                data-link={el.link}\r\n              >\r\n                {el.title}\r\n              </DropdownElement>\r\n            ))}\r\n          </DropdownWrapper>\r\n        )}\r\n      </Container>\r\n    );\r\n  }\r\n);\r\n\r\nconst Container = styled.div`\r\n  position: relative;\r\n`;\r\n\r\nconst Wrapper = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  cursor: pointer;\r\n  height: 100%;\r\n\r\n  &:hover {\r\n    color: ${({ navBarTextHoverColor }) => navBarTextHoverColor};\r\n  }\r\n  &:active {\r\n    color: ${({ navBarTextClickedColor }) => navBarTextClickedColor};\r\n  }\r\n`;\r\n\r\nconst DropdownWrapper = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  position: absolute;\r\n  top: 100%;\r\n  left: 0;\r\n`;\r\n\r\nconst IconWrapper = styled.div``;\r\n\r\nconst DropdownElement = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  white-space: nowrap;\r\n  cursor: pointer;\r\n  background: ${({ dropdownSettingsInactiveFill }) => dropdownSettingsInactiveFill};\r\n  border: 2px solid ${({ dropdownSettingsInactiveBorder }) => dropdownSettingsInactiveBorder};\r\n  color: ${({ dropdownSettingsTextColorRegular }) => dropdownSettingsTextColorRegular};\r\n  font-size: ${({ dropdownSettingsTextFontSize }) => dropdownSettingsTextFontSize}px;\r\n  font-family: ${({ dropdownSettingsTextFontFamily }) => dropdownSettingsTextFontFamily};\r\n  font-weight: ${({ dropdownSettingsTextBold }) => (dropdownSettingsTextBold ? 'bold' : 'normal')};\r\n  font-style: ${({ dropdownSettingsTextItalic }) => (dropdownSettingsTextItalic ? 'italic' : 'normal')};\r\n  text-decoration: ${({ dropdownSettingsTextUnderline }) => (dropdownSettingsTextUnderline ? 'underline' : 'none')};\r\n  padding: ${({ dropdownSettingsVerticalPadding, dropdownSettingsHorizontalPadding }) =>\r\n    `${dropdownSettingsVerticalPadding}px ${dropdownSettingsHorizontalPadding}px`};\r\n\r\n  &:hover {\r\n    background: ${({ dropdownSettingsHoverClickedFill }) => dropdownSettingsHoverClickedFill};\r\n    border: 2px solid ${({ dropdownSettingsHoverClickedBorder }) => dropdownSettingsHoverClickedBorder};\r\n    color: ${({ dropdownSettingsTextColorHover }) => dropdownSettingsTextColorHover};\r\n  }\r\n  &:active {\r\n    background: ${({ dropdownSettingsHoverClickedFill }) => dropdownSettingsHoverClickedFill};\r\n    border: 2px solid ${({ dropdownSettingsHoverClickedBorder }) => dropdownSettingsHoverClickedBorder};\r\n    color: ${({ dropdownSettingsTextColorClicked }) => dropdownSettingsTextColorClicked};\r\n  }\r\n`;\r\n\r\nNavBarPage.propTypes = {\r\n  link: PropTypes.string,\r\n  disabledRedirect: PropTypes.bool,\r\n  disabledListClick: PropTypes.bool,\r\n  title: PropTypes.string,\r\n  navBarTextHoverColor: PropTypes.string,\r\n  navBarTextClickedColor: PropTypes.string,\r\n  children: PropTypes.array,\r\n  dropdownSettingsInactiveFill: PropTypes.string,\r\n  dropdownSettingsInactiveBorder: PropTypes.string,\r\n  dropdownSettingsHoverClickedFill: PropTypes.string,\r\n  dropdownSettingsHoverClickedBorder: PropTypes.string,\r\n  dropdownSettingsTextColorRegular: PropTypes.string,\r\n  dropdownSettingsTextColorHover: PropTypes.string,\r\n  dropdownSettingsTextColorClicked: PropTypes.string,\r\n  dropdownSettingsTextFontFamily: PropTypes.string,\r\n  dropdownSettingsTextFontSize: PropTypes.number,\r\n  dropdownSettingsTextBold: PropTypes.bool,\r\n  dropdownSettingsTextUnderline: PropTypes.bool,\r\n  dropdownSettingsTextItalic: PropTypes.bool,\r\n  dropdownSettingsHorizontalPadding: PropTypes.number,\r\n  dropdownSettingsVerticalPadding: PropTypes.number\r\n};\r\n\r\nexport default NavBarPage;\r\n","import React, { createRef, useEffect } from 'react';\r\n\r\nexport const useOutsideClick = (callback) => {\r\n  const ref = createRef();\r\n\r\n  const listener = (e) => {\r\n    if (ref.current && !ref?.current.contains(e.target)) {\r\n      callback(e, ref.current);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    document.addEventListener('mousedown', listener);\r\n    document.addEventListener('touchstart', listener);\r\n\r\n    return () => {\r\n      document.removeEventListener('mousedown', listener);\r\n      document.removeEventListener('touchstart', listener);\r\n    };\r\n  });\r\n\r\n  return ref;\r\n};\r\n","import React, { memo, useCallback } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport styled from 'styled-components';\r\nimport { openLinkInNewTab } from '../../utils/openLinkInNewTab.js';\r\n\r\nconst NavBarButton = memo(\r\n  ({\r\n    link,\r\n    disabledRedirect,\r\n    title,\r\n    buttonSettingsRoundCorners,\r\n    buttonSettingsBorderWidth,\r\n    buttonSettingsRegularBorder,\r\n    buttonSettingsRegularFill,\r\n    buttonSettingsHorizontalPadding,\r\n    buttonSettingsVerticalPadding,\r\n    buttonSettingsHoverClickedBorder,\r\n    buttonSettingsHoverClickedFill,\r\n    buttonSettingsTextColorRegular,\r\n    buttonSettingsTextColorHover,\r\n    buttonSettingsTextColorClicked\r\n  }) => {\r\n    const onClick = useCallback(() => {\r\n      if (link && !disabledRedirect) {\r\n        openLinkInNewTab(link);\r\n      }\r\n    }, [link, disabledRedirect]);\r\n    return (\r\n      <Wrapper\r\n        buttonSettingsRoundCorners={buttonSettingsRoundCorners}\r\n        buttonSettingsBorderWidth={buttonSettingsBorderWidth}\r\n        buttonSettingsRegularBorder={buttonSettingsRegularBorder}\r\n        buttonSettingsRegularFill={buttonSettingsRegularFill}\r\n        buttonSettingsHorizontalPadding={buttonSettingsHorizontalPadding}\r\n        buttonSettingsVerticalPadding={buttonSettingsVerticalPadding}\r\n        buttonSettingsHoverClickedBorder={buttonSettingsHoverClickedBorder}\r\n        buttonSettingsHoverClickedFill={buttonSettingsHoverClickedFill}\r\n        buttonSettingsTextColorRegular={buttonSettingsTextColorRegular}\r\n        buttonSettingsTextColorHover={buttonSettingsTextColorHover}\r\n        buttonSettingsTextColorClicked={buttonSettingsTextColorClicked}\r\n        onClick={onClick}\r\n        data-link={link}\r\n      >\r\n        {title}\r\n      </Wrapper>\r\n    );\r\n  }\r\n);\r\n\r\nconst Wrapper = styled.div`\r\n  margin: 10px 0;\r\n  line-height: normal;\r\n  cursor: pointer;\r\n  display: flex;\r\n  align-items: center;\r\n  border-radius: ${({ buttonSettingsRoundCorners }) => buttonSettingsRoundCorners}px;\r\n  border: ${({ buttonSettingsBorderWidth }) => buttonSettingsBorderWidth}px solid\r\n    ${({ buttonSettingsRegularBorder }) => buttonSettingsRegularBorder};\r\n  background: ${({ buttonSettingsRegularFill }) => buttonSettingsRegularFill};\r\n  padding: ${({ buttonSettingsVerticalPadding, buttonSettingsHorizontalPadding }) =>\r\n    `${buttonSettingsVerticalPadding}px ${buttonSettingsHorizontalPadding}px`};\r\n  color: ${({ buttonSettingsTextColorRegular }) => buttonSettingsTextColorRegular};\r\n\r\n  &:hover {\r\n    border: ${({ buttonSettingsBorderWidth }) => buttonSettingsBorderWidth}px solid\r\n      ${({ buttonSettingsHoverClickedBorder }) => buttonSettingsHoverClickedBorder};\r\n    background: ${({ buttonSettingsHoverClickedFill }) => buttonSettingsHoverClickedFill};\r\n    color: ${({ buttonSettingsTextColorHover }) => buttonSettingsTextColorHover};\r\n  }\r\n\r\n  &:active {\r\n    border: ${({ buttonSettingsBorderWidth }) => buttonSettingsBorderWidth}px solid\r\n      ${({ buttonSettingsHoverClickedBorder }) => buttonSettingsHoverClickedBorder};\r\n    background: ${({ buttonSettingsHoverClickedFill }) => buttonSettingsHoverClickedFill};\r\n    color: ${({ buttonSettingsTextColorClicked }) => buttonSettingsTextColorClicked};\r\n  }\r\n`;\r\n\r\nNavBarButton.propTypes = {\r\n  disabledRedirect: PropTypes.bool,\r\n  title: PropTypes.string,\r\n  link: PropTypes.string,\r\n  buttonSettingsRoundCorners: PropTypes.number,\r\n  buttonSettingsBorderWidth: PropTypes.number,\r\n  buttonSettingsRegularBorder: PropTypes.string,\r\n  buttonSettingsRegularFill: PropTypes.string,\r\n  buttonSettingsVerticalPadding: PropTypes.number,\r\n  buttonSettingsHorizontalPadding: PropTypes.number,\r\n  buttonSettingsHoverClickedBorder: PropTypes.string,\r\n  buttonSettingsHoverClickedFill: PropTypes.string,\r\n  buttonSettingsTextColorRegular: PropTypes.string,\r\n  buttonSettingsTextColorHover: PropTypes.string,\r\n  buttonSettingsTextColorClicked: PropTypes.string\r\n};\r\n\r\nexport default NavBarButton;\r\n","import React, { forwardRef } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport styled, { css } from 'styled-components';\r\n\r\nconst Index = forwardRef(({ height, id, crop, source, alt, ignoreMaxHeight, isTurntable, isHero }, ref) => {\r\n  const styles = { width: '100%', height: '100%', objectFit: 'cover' };\r\n  if (!ignoreMaxHeight) {\r\n    styles.maxHeight = '600px';\r\n  }\r\n  return (\r\n    <CropArea ref={ref} isTurntable={isTurntable} isHero={isHero} height={height} id={id}>\r\n      <CropImageWrapper {...crop.imagePosition} isHero={isHero}>\r\n        <img src={source} alt={alt} style={styles} />\r\n      </CropImageWrapper>\r\n    </CropArea>\r\n  );\r\n});\r\n\r\nconst CropImageWrapper = styled.div`\r\n  position: relative;\r\n  left: ${({ x }) => x || 0}%;\r\n  top: ${({ y }) => y || 0}%;\r\n  width: ${({ width }) => width || 100}%;\r\n  height: ${({ height }) => height || 100}%;\r\n\r\n  ${({ isHero }) =>\r\n    isHero &&\r\n    css`\r\n      position: static;\r\n      img {\r\n        object-fit: cover;\r\n        //margin-left: auto;\r\n        //margin-right: auto;\r\n        //width: auto !important;\r\n      }\r\n    `};\r\n`;\r\n\r\nconst CropArea = styled.div`\r\n  width: 100%;\r\n  height: ${({ height, isTurntable, isHero }) =>\r\n    isTurntable ? '100%' : isHero ? '100%' : height ? height + 'px' : '100%'};\r\n  position: relative;\r\n  background-color: transparent;\r\n  overflow: hidden;\r\n`;\r\n\r\nIndex.propTypes = {\r\n  height: PropTypes.number,\r\n  id: PropTypes.string,\r\n  crop: PropTypes.object,\r\n  source: PropTypes.string.isRequired,\r\n  alt: PropTypes.string,\r\n  ignoreMaxHeight: PropTypes.bool,\r\n  isTurntable: PropTypes.bool,\r\n  isHero: PropTypes.bool\r\n};\r\n\r\nIndex.defaultProps = {\r\n  id: '',\r\n  alt: '',\r\n  ignoreMaxHeight: false,\r\n  crop: {}\r\n};\r\n\r\nexport default Index;\r\n","import React, { Fragment } from 'react';\r\nimport styled, { css } from 'styled-components';\r\nimport PropTypes from 'prop-types';\r\nimport { logoImageHeight, logoImageWidth } from '../../consts.js';\r\nimport { getCropperQueryString } from '../../utils/getCropperQueryString.js';\r\nimport NavBarPage from './Page.js';\r\nimport NavBarButton from './Button.js';\r\nimport CropImage from '../../components/CropImage/index.js';\r\n\r\nconst NavBar = ({ config, disabledRedirect = false, disabledListClick = false, stickyOffset = 0, isStatic = false }) => {\r\n  const {\r\n    height,\r\n    navBarRegularColor,\r\n    logoAlignment,\r\n    logoCropperOptions,\r\n    logoSrc,\r\n    navBarTextAlignment,\r\n    navBarTextFontSize,\r\n    navBarTextFontFamily,\r\n    navBarTextBold,\r\n    navBarTextItalic,\r\n    navBarTextUnderline,\r\n    navBarTextRegularColor,\r\n    structure,\r\n    navBarTextHoverColor,\r\n    navBarTextClickedColor,\r\n    navBarTextSpacing,\r\n    buttonSettingsRoundCorners,\r\n    buttonSettingsBorderWidth,\r\n    buttonSettingsRegularBorder,\r\n    buttonSettingsRegularFill,\r\n    buttonSettingsHorizontalPadding,\r\n    buttonSettingsVerticalPadding,\r\n    buttonSettingsHoverClickedFill,\r\n    buttonSettingsHoverClickedBorder,\r\n    buttonSettingsTextColorRegular,\r\n    buttonSettingsTextColorHover,\r\n    buttonSettingsTextColorClicked,\r\n    navBarBehavior,\r\n    dropdownSettingsInactiveFill,\r\n    dropdownSettingsInactiveBorder,\r\n    dropdownSettingsHoverClickedFill,\r\n    dropdownSettingsHoverClickedBorder,\r\n    dropdownSettingsTextColorRegular,\r\n    dropdownSettingsTextColorHover,\r\n    dropdownSettingsTextColorClicked,\r\n    dropdownSettingsTextFontFamily,\r\n    dropdownSettingsTextFontSize,\r\n    dropdownSettingsTextBold,\r\n    dropdownSettingsTextUnderline,\r\n    dropdownSettingsTextItalic,\r\n    dropdownSettingsHorizontalPadding,\r\n    dropdownSettingsVerticalPadding\r\n  } = config;\r\n\r\n  const LogoComponent = (\r\n    <Logo>\r\n      <CropImage source={logoSrc + getCropperQueryString(logoCropperOptions)} crop={logoCropperOptions} />\r\n    </Logo>\r\n  );\r\n  return (\r\n    <Wrapper height={height} navBarRegularColor={navBarRegularColor} navBarBehavior={navBarBehavior} stickyOffset={stickyOffset} className={\"navbar-desktop\"}>\r\n      <Menu height={height}>\r\n        {logoAlignment === 'left' && LogoComponent}\r\n        <Container\r\n          navBarTextAlignment={navBarTextAlignment}\r\n          navBarTextFontSize={navBarTextFontSize}\r\n          navBarTextFontFamily={navBarTextFontFamily}\r\n          navBarTextBold={navBarTextBold}\r\n          navBarTextItalic={navBarTextItalic}\r\n          navBarTextUnderline={navBarTextUnderline}\r\n          navBarTextRegularColor={navBarTextRegularColor}\r\n          navBarTextSpacing={navBarTextSpacing}\r\n          logoAlignment={logoAlignment}\r\n        >\r\n          {(structure || []).map((el) => {\r\n            let component = null;\r\n            if (el.type === 'button') {\r\n              component = (\r\n                <NavBarButton\r\n                  {...el}\r\n                  disabledRedirect={disabledRedirect}\r\n                  buttonSettingsRoundCorners={buttonSettingsRoundCorners}\r\n                  buttonSettingsBorderWidth={buttonSettingsBorderWidth}\r\n                  buttonSettingsRegularBorder={buttonSettingsRegularBorder}\r\n                  buttonSettingsRegularFill={buttonSettingsRegularFill}\r\n                  buttonSettingsVerticalPadding={buttonSettingsVerticalPadding}\r\n                  buttonSettingsHorizontalPadding={buttonSettingsHorizontalPadding}\r\n                  buttonSettingsHoverClickedBorder={buttonSettingsHoverClickedBorder}\r\n                  buttonSettingsHoverClickedFill={buttonSettingsHoverClickedFill}\r\n                  buttonSettingsTextColorRegular={buttonSettingsTextColorRegular}\r\n                  buttonSettingsTextColorHover={buttonSettingsTextColorHover}\r\n                  buttonSettingsTextColorClicked={buttonSettingsTextColorClicked}\r\n                />\r\n              );\r\n            } else if (el.type === 'page') {\r\n              component = (\r\n                <NavBarPage\r\n                  {...el}\r\n                  disabledRedirect={disabledRedirect}\r\n                  disabledListClick={disabledListClick}\r\n                  navBarTextHoverColor={navBarTextHoverColor}\r\n                  navBarTextClickedColor={navBarTextClickedColor}\r\n                  dropdownSettingsInactiveFill={dropdownSettingsInactiveFill}\r\n                  dropdownSettingsInactiveBorder={dropdownSettingsInactiveBorder}\r\n                  dropdownSettingsHoverClickedFill={dropdownSettingsHoverClickedFill}\r\n                  dropdownSettingsHoverClickedBorder={dropdownSettingsHoverClickedBorder}\r\n                  dropdownSettingsTextColorRegular={dropdownSettingsTextColorRegular}\r\n                  dropdownSettingsTextColorHover={dropdownSettingsTextColorHover}\r\n                  dropdownSettingsTextColorClicked={dropdownSettingsTextColorClicked}\r\n                  dropdownSettingsTextFontFamily={dropdownSettingsTextFontFamily}\r\n                  dropdownSettingsTextFontSize={dropdownSettingsTextFontSize}\r\n                  dropdownSettingsTextBold={dropdownSettingsTextBold}\r\n                  dropdownSettingsTextUnderline={dropdownSettingsTextUnderline}\r\n                  dropdownSettingsTextItalic={dropdownSettingsTextItalic}\r\n                  dropdownSettingsHorizontalPadding={dropdownSettingsHorizontalPadding}\r\n                  dropdownSettingsVerticalPadding={dropdownSettingsVerticalPadding}\r\n                  isStatic={isStatic}\r\n                />\r\n              );\r\n            }\r\n            return <Fragment key={el.id}>{component}</Fragment>;\r\n          })}\r\n        </Container>\r\n        {logoAlignment === 'right' && LogoComponent}\r\n      </Menu>\r\n    </Wrapper>\r\n  );\r\n};\r\n\r\nNavBar.propTypes = {\r\n  config: PropTypes.object,\r\n  disabledRedirect: PropTypes.bool,\r\n  disabledListClick: PropTypes.bool,\r\n  stickyOffset: PropTypes.number,\r\n  isStatic: PropTypes.bool,\r\n};\r\n\r\nconst Wrapper = styled.div`\r\n  display: flex;\r\n  height: ${({ height }) => height}px;\r\n  background-color: ${({ navBarRegularColor }) => navBarRegularColor};\r\n  padding: 0 50px;\r\n  width: 100%;\r\n  margin: auto;\r\n  align-items: center;\r\n  flex-shrink: 0;\r\n  z-index: 1001;\r\n\r\n  ${({ navBarBehavior, stickyOffset }) =>\r\n    navBarBehavior === 'frozen' &&\r\n    css`\r\n      position: sticky;\r\n      top: ${stickyOffset}px;\r\n    `};\r\n`;\r\n\r\nconst Logo = styled.div`\r\n  width: ${logoImageWidth}px;\r\n  height: ${logoImageHeight}px;\r\n`;\r\n\r\nconst Menu = styled.div`\r\n  width: 100%;\r\n  display: flex;\r\n  align-items: center;\r\n  max-width: 1120px;\r\n  margin: auto;\r\n  height: ${({ height }) => height}px;\r\n`;\r\n\r\nconst Container = styled.div`\r\n  display: flex;\r\n  flex: 1 1 auto;\r\n  margin: ${({ logoAlignment }) => {\r\n    if (logoAlignment === 'right') {\r\n      return '0 24px 0 0';\r\n    }\r\n    return '0 0 0 24px';\r\n  }};\r\n  justify-content: ${({ navBarTextAlignment }) => navBarTextAlignment};\r\n  font-size: ${({ navBarTextFontSize }) => navBarTextFontSize}px;\r\n  font-family: ${({ navBarTextFontFamily }) => navBarTextFontFamily};\r\n  font-weight: ${({ navBarTextBold }) => (navBarTextBold ? 'bold' : 'normal')};\r\n  font-style: ${({ navBarTextItalic }) => (navBarTextItalic ? 'italic' : 'normal')};\r\n  text-decoration: ${({ navBarTextUnderline }) => (navBarTextUnderline ? 'underline' : 'none')};\r\n  color: ${({ navBarTextRegularColor }) => navBarTextRegularColor};\r\n  height: 100%;\r\n  > div {\r\n    margin-right: ${({ navBarTextSpacing }) => navBarTextSpacing}px;\r\n    &:last-child {\r\n      margin-right: 0;\r\n    }\r\n  }\r\n`;\r\n\r\nexport default NavBar;\r\n","import React from 'react';\r\nconst BurgerIcon = () => (\r\n    <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"19.94\" height=\"16.44\" viewBox=\"0 0 19.94 16.44\">\r\n        <path d=\"M20.41,6.91H3.47a1.5,1.5,0,0,1,0-3H20.41A1.5,1.5,0,0,1,20.41,6.91Z\" transform=\"translate(-1.97 -3.91)\" />\r\n        <path d=\"M20.41,13.91H3.47a1.5,1.5,0,0,1,0-3H20.41A1.5,1.5,0,0,1,20.41,13.91Z\" transform=\"translate(-1.97 -3.91)\" />\r\n        <path d=\"M20.41,20.34H3.47a1.5,1.5,0,0,1,0-3H20.41A1.5,1.5,0,0,1,20.41,20.34Z\" transform=\"translate(-1.97 -3.91)\" />\r\n    </svg>\r\n);\r\n\r\nexport default BurgerIcon;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport styled, {css} from 'styled-components';\r\nimport {getCropperQueryString} from '../../utils/getCropperQueryString.js';\r\nimport {logoImageHeight, logoImageWidth} from '../../consts.js';\r\nimport {Icon} from \"../../components/Icon\";\r\nimport BurgerIcon from '../../icons/BurgerIcon.js';\r\nimport CropImage from '../../components/CropImage/index.js';\r\n\r\nconst NavBarMobile = ({config, stickyOffset = 0, isConstructor = false}) => {\r\n    const {mobileHeight, navBarRegularColor, mobileLogoAlignment, logoSrc, logoCropperOptions, navBarBehavior} = config;\r\n    return (\r\n        <Wrapper height={mobileHeight} navBarRegularColor={navBarRegularColor} navBarBehavior={navBarBehavior} stickyOffset={stickyOffset} className={\"navbar-mobile\"} isConstructor={isConstructor}>\r\n            <IconWrapper>\r\n                <Icon icon={BurgerIcon} color={'#ffffff'}/>\r\n            </IconWrapper>\r\n            <LogoWrapper mobileLogoAlignment={mobileLogoAlignment}>\r\n                <Logo>\r\n                    <CropImage source={logoSrc + getCropperQueryString(logoCropperOptions)} crop={logoCropperOptions}/>\r\n                </Logo>\r\n            </LogoWrapper>\r\n        </Wrapper>\r\n    );\r\n};\r\n\r\nconst Wrapper = styled.div`\r\n  z-index: 1001;\r\n  display: flex;\r\n  width: 100%;\r\n  padding: 15px 13px 16px 15px;\r\n  border-radius: 3px;\r\n  border: solid 1px rgba(164, 198, 225, 0.39);\r\n  height: ${({height}) => height}px;\r\n  background-color: ${({navBarRegularColor}) => navBarRegularColor};\r\n  align-items: center;\r\n  position: relative;\r\n  ${({navBarBehavior, stickyOffset, isConstructor}) =>\r\n          navBarBehavior === 'frozen' && !isConstructor &&\r\n          css`\r\n            position: fixed;\r\n            top: ${stickyOffset}px;\r\n          `};\r\n`;\r\n\r\nconst LogoWrapper = styled.div`\r\n  display: flex;\r\n  flex: 1 1 auto;\r\n  justify-content: ${({mobileLogoAlignment}) => {\r\n    if (mobileLogoAlignment === 'center') {\r\n      return 'center';\r\n    } else if (mobileLogoAlignment === 'right') {\r\n      return 'flex-end';\r\n    }\r\n    return '';\r\n  }};\r\n`;\r\n\r\nconst Logo = styled.div`\r\n  width: ${logoImageWidth}px;\r\n  height: ${logoImageHeight}px;\r\n`;\r\n\r\nconst IconWrapper = styled.div`\r\n  display: flex;\r\n  position: absolute;\r\n`;\r\n\r\nNavBarMobile.propTypes = {\r\n    config: PropTypes.object,\r\n    stickyOffset: PropTypes.number,\r\n};\r\n\r\nexport default NavBarMobile;\r\n"],"names":["roundedNumber","value","Math","floor","getCropperQueryString","crop","Object","keys","length","imageBox","rotate","x","y","height","width","concat","Icon","_ref","icon","_ref$opacity","opacity","_ref$hoverOpacity","hoverOpacity","_ref$color","color","_ref$hoverColor","hoverColor","_ref$size","size","noCursor","_ref$padding","padding","tableIcon","React","IconWrapper","_renderIcon","createElement","styled","div","_templateObject","_taggedTemplateLiteral","_ref2","_ref3","_ref4","_ref5","_ref6","_ref7","_ref8","_ref9","_ref10","_ref11","_ref12","_ref13","propTypes","PropTypes","string","oneOfType","func","number","bool","defaultProps","ArrowIcon","viewBox","d","fill","openLinkInNewTab","link","window","open","NavBarPage","memo","disabledRedirect","disabledListClick","title","navBarTextHoverColor","navBarTextClickedColor","children","dropdownSettingsInactiveFill","dropdownSettingsInactiveBorder","dropdownSettingsHoverClickedFill","dropdownSettingsHoverClickedBorder","dropdownSettingsTextColorRegular","dropdownSettingsTextColorHover","dropdownSettingsTextColorClicked","dropdownSettingsTextFontFamily","dropdownSettingsTextFontSize","dropdownSettingsTextBold","dropdownSettingsTextUnderline","dropdownSettingsTextItalic","dropdownSettingsHorizontalPadding","dropdownSettingsVerticalPadding","isStatic","_useState2","_slicedToArray","useState","setOpen","ref","callback","createRef","listener","e","current","contains","target","useEffect","document","addEventListener","removeEventListener","useOutsideClick","isDropdown","onClick","useCallback","state","Container","Wrapper","undefined","DropdownWrapper","className","map","el","DropdownElement","key","id","_templateObject2","_templateObject3","_templateObject4","_templateObject5","_ref14","_ref15","_ref16","_ref17","_ref18","array","NavBarButton","buttonSettingsRoundCorners","buttonSettingsBorderWidth","buttonSettingsRegularBorder","buttonSettingsRegularFill","buttonSettingsHorizontalPadding","buttonSettingsVerticalPadding","buttonSettingsHoverClickedBorder","buttonSettingsHoverClickedFill","buttonSettingsTextColorRegular","buttonSettingsTextColorHover","buttonSettingsTextColorClicked","Index","forwardRef","source","alt","ignoreMaxHeight","isTurntable","isHero","styles","objectFit","maxHeight","CropArea","CropImageWrapper","imagePosition","src","style","css","object","isRequired","NavBar","config","_ref$disabledRedirect","_ref$disabledListClic","_ref$stickyOffset","stickyOffset","_ref$isStatic","navBarRegularColor","logoAlignment","logoCropperOptions","logoSrc","navBarTextAlignment","navBarTextFontSize","navBarTextFontFamily","navBarTextBold","navBarTextItalic","navBarTextUnderline","navBarTextRegularColor","structure","navBarTextSpacing","navBarBehavior","LogoComponent","Logo","CropImage","Menu","component","type","_extends","Fragment","logoImageWidth","BurgerIcon","xmlns","transform","NavBarMobile","_ref$isConstructor","isConstructor","mobileHeight","mobileLogoAlignment","LogoWrapper"],"mappings":"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"}